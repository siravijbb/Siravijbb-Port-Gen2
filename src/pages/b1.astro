<!-- public/index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JSON Data Boxes</title>
</head>
<body>
    <div class="mx-auto lg:px-8 max-w-7xl sm:px-6">
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4" id="box-container">
            <!-- Boxes will be dynamically generated here -->
        </div>
    </div>

    <script>
        async function fetchData() {
            try {
                // Fetch JSON data and process boxes
                const response = await fetch('https://blog.nbgears.tech/data/latest/nbgears.json');
                const data = await response.json();
                const boxContainer = document.getElementById('box-container');

                // Display only as many boxes as you have URLs
                for (let index = 0; index < data.length; index++) {
                    const item = data[index];
                    const boxElement = createBoxElement(item);
                    boxContainer.appendChild(boxElement);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function createBoxElement(item) {
    const box = document.createElement('a');
    box.className = 'box p-4 bg-white border rounded-lg shadow-md hover:shadow-lg transition duration-300';
    box.href = `https://blog.nbgears.tech${item.url}`; // Set the correct full URL here

    const boxContent = document.createElement('div');
    boxContent.className = 'box-content';

    const banner = new Image();
    banner.src = item.banner.url;
    banner.height = (48 * item.banner.width) / item.banner.height;
    banner.width = 1080;
    banner.className = 'w-full h-48 object-cover rounded-t-lg';
    boxContent.appendChild(banner);

    const boxTitle = document.createElement('h2');
    boxTitle.className = 'box-title text-lg font-semibold mb-2 mt-4';
    boxTitle.textContent = item.title;
    boxContent.appendChild(boxTitle);

    const boxSubtitle = document.createElement('p');
    boxSubtitle.className = 'box-subtitle text-gray-600';
    boxSubtitle.textContent = item.subtitle;
    boxContent.appendChild(boxSubtitle);

    const boxDate = document.createElement('p');
    boxDate.className = 'box-date text-gray-400 mt-2';
    boxDate.textContent = new Date(item.date).toLocaleString();
    boxContent.appendChild(boxDate);

    // Check if the item is featured
    if (item.featured) {
        const featuredLabel = document.createElement('span');
        featuredLabel.className = 'featured-t flex-none items-center rounded-md bg-blue-100 px-2.5 py-0.5 text-sm font-medium text-blue-800';
        featuredLabel.textContent = 'Featured';
        boxContent.appendChild(featuredLabel);
    }

    // Add categories
    const categories = item.categories;
    if (categories && categories.length > 0) {
        const categoriesContainer = document.createElement('div');
        categoriesContainer.className = 'categories flex-initial';

        const categoriesLabel = document.createElement('span');


        const categoriesList = document.createElement('ul');
        categoriesList.className = 'categories-list flex-initial ';

        categories.forEach(category => {
            const categoryItem = document.createElement('li');
            categoryItem.className = 'category-item  items-center rounded-md bg-blue-100 px-2.5 py-0.5 my-1 text-sm font-medium text-blue-800 h-fit w-fit';
            categoryItem.textContent = category;
            categoriesList.appendChild(categoryItem);
        });

        categoriesContainer.appendChild(categoriesList);
        boxContent.appendChild(categoriesContainer);
    }

    box.appendChild(boxContent);
    return box;
}

        fetchData();
    </script>
</body>
</html>
